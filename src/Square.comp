#version 450 core

layout(local_size_x = 4, local_size_y = 4) in;

layout(set = 1, std430, binding = 0) readonly buffer InputBuffer{
    int matrixsize;
    uint inData_SSBO[];
} inputDat;

layout(set = 1, binding = 1) buffer OutputBuffer
{
    uint outData[];
} outputData;

void main(void)
{

    uint index = gl_GlobalInvocationID.x;
    uint indexy = gl_GlobalInvocationID.y;

    uint outindex = indexy * inputDat.matrixsize + index;

    if(outindex > inputDat.matrixsize * inputDat.matrixsize)
    {
        return;
    }

    outputData.outData[indexy * inputDat.matrixsize + index] = uint(sqrt(inputDat.inData_SSBO[indexy] * inputDat.inData_SSBO[index]));
}